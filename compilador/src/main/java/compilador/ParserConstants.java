package compilador;



public interface ParserConstants
{
    int START_SYMBOL = 47;

    int FIRST_NON_TERMINAL    = 47;
    int FIRST_SEMANTIC_ACTION = 84;

    int[][] PARSER_TABLE =
    {
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,  0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1,  1, -1, -1, -1, -1, -1,  1, -1,  1, -1, -1, -1, -1, -1,  1, -1, -1,  1,  1,  1, -1, -1,  1,  1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1,  3, -1, -1, -1, -1, -1,  3, -1,  3, -1, -1, -1, -1, -1,  3, -1, -1,  3,  3,  3, -1, -1,  3,  3, -1, -1, -1, -1, -1, -1, -1, -1,  2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1,  6, -1, -1, -1, -1, -1,  6, -1,  6, -1, -1, -1, -1, -1,  6, -1, -1,  6,  6,  6, -1, -1,  4,  5, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,  7, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,  8, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, 15, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 17, 16, -1, 17, -1, 17, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, 22, -1, 20, -1, -1, -1, -1, 19, -1, -1, 18, -1, -1, -1, -1, 21, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, 23, 24, 25, 26, -1, -1, -1, -1, -1, -1, 28, -1, -1, -1, -1, -1, -1, -1, -1, -1, 27, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1,  9, -1, -1, -1, -1, -1, 14, -1, 13, -1, -1, -1, -1, -1, 12, -1, -1, 11, 11, 10, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, 35, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 36, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 39, 40, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, 41, 41, 41, 41, 41, -1, -1, -1, -1, -1, -1, 41, -1, -1, -1, -1, -1, -1, -1, -1, -1, 41, -1, -1, -1, -1, -1, -1, -1, 41, -1, -1, -1, -1, -1, -1, -1, 41, 41, -1, -1, -1, -1, 41, -1 },
        { -1, 43, 43, 43, 43, 43, -1, -1, -1, -1, -1, -1, 43, -1, -1, -1, -1, -1, -1, -1, -1, -1, 43, -1, -1, -1, -1, -1, -1, -1, 43, 42, -1, -1, -1, -1, -1, -1, 43, 43, -1, -1, -1, -1, 43, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 44, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 45, 46, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, 47, -1, -1, -1, -1, -1, 47, -1, 47, -1, -1, -1, -1, -1, 47, -1, -1, 47, 47, 47, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, 48, -1, -1, -1, -1, -1, 48, -1, 48, 49, 49, -1, -1, -1, 48, -1, -1, 48, 48, 48, -1, -1, -1, -1, 49, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, 50, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 30, -1, -1, 30, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 31, -1, -1, 32, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 33, 34, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, 29, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, 38, -1, -1, -1, 37, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, 51, 51, 51, 51, 51, -1, -1, -1, -1, -1, -1, 51, -1, -1, -1, -1, -1, -1, -1, -1, -1, 51, -1, -1, -1, -1, -1, -1, -1, 51, -1, -1, -1, -1, -1, -1, -1, 51, 51, -1, -1, -1, -1, 51, -1 },
        { -1, 52, 52, 52, 52, 52, -1, -1, -1, -1, -1, -1, 52, -1, -1, -1, -1, -1, -1, -1, -1, -1, 52, -1, -1, -1, -1, 52, 52, -1, 52, 52, -1, -1, -1, -1, -1, -1, 52, 52, -1, -1, 53, 54, 52, -1 },
        { -1, 55, 55, 55, 55, 55, -1, -1, -1, -1, -1, -1, 57, -1, -1, -1, -1, -1, -1, -1, -1, -1, 56, -1, -1, -1, -1, -1, -1, -1, 55, -1, -1, -1, -1, -1, -1, -1, 55, 55, -1, -1, -1, -1, 58, -1 },
        { -1, 59, 59, 59, 59, 59, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 59, -1, -1, -1, -1, -1, -1, -1, 59, 59, -1, -1, -1, -1, -1, -1 },
        { -1, 60, 60, 60, 60, 60, -1, -1, -1, -1, -1, -1, 60, -1, -1, -1, -1, -1, -1, -1, -1, -1, 60, -1, -1, -1, -1, 60, 60, -1, 60, 60, -1, -1, 61, 61, 61, 61, 60, 60, -1, -1, 60, 60, 60, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 62, 63, 64, 65, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, 66, 66, 66, 66, 66, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 66, -1, -1, -1, -1, -1, -1, -1, 66, 66, -1, -1, -1, -1, -1, -1 },
        { -1, 67, 67, 67, 67, 67, -1, -1, -1, -1, -1, -1, 67, -1, -1, -1, -1, -1, -1, -1, -1, -1, 67, -1, -1, -1, -1, 67, 67, -1, 67, 67, -1, -1, 67, 67, 67, 67, 68, 69, -1, -1, 67, 67, 67, -1 },
        { -1, 70, 70, 70, 70, 70, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 70, -1, -1, -1, -1, -1, -1, -1, 70, 70, -1, -1, -1, -1, -1, -1 },
        { -1, 71, 71, 71, 71, 71, -1, -1, -1, -1, -1, -1, 71, -1, -1, -1, -1, -1, -1, -1, -1, -1, 71, -1, -1, -1, -1, 71, 71, -1, 71, 71, -1, -1, 71, 71, 71, 71, 71, 71, 72, 74, 71, 71, 71, 73 },
        { -1, 75, 76, 77, 78, 79, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 80, -1, -1, -1, -1, -1, -1, -1, 81, 82, -1, -1, -1, -1, -1, -1 }
    };

    int[][] PRODUCTIONS = 
    {
        { 15, 18, 33, 48, 34 },
        { 50, 49 },
        {  0 },
        { 48 },
        { 51 },
        { 52 },
        { 57 },
        { 24, 71 },
        { 25, 71 },
        { 58 },
        { 59 },
        { 60 },
        { 63 },
        { 67 },
        {  8, 29 },
        {  2, 54 },
        { 28, 53 },
        {  0 },
        { 17 },
        { 14 },
        {  9 },
        { 22 },
        {  7 },
        {  3 },
        {  4 },
        {  5 },
        {  6 },
        { 23 },
        { 13 },
        { 53, 68, 29 },
        { 69, 70 },
        { 27, 55 },
        { 30, 56 },
        {  0 },
        { 30, 56 },
        {  2, 30, 73, 29 },
        { 21, 31, 72, 53, 32, 29 },
        {  6, 28 },
        {  0 },
        { 19, 31, 61, 32, 29 },
        { 20, 31, 61, 32, 29 },
        { 73, 62 },
        {  0 },
        { 73, 28, 61 },
        { 16, 31, 73, 32, 65, 64, 12, 29 },
        { 11, 65 },
        {  0 },
        { 57, 66 },
        { 65 },
        {  0 },
        { 10, 65, 26, 31, 73, 32, 12, 29 },
        { 75, 74 },
        {  0 },
        { 43, 75, 74 },
        { 44, 75, 74 },
        { 76 },
        { 23 },
        { 13 },
        { 45, 75 },
        { 79, 77 },
        {  0 },
        { 78, 79 },
        { 35 },
        { 36 },
        { 37 },
        { 38 },
        { 81, 80 },
        {  0 },
        { 39, 81, 80 },
        { 40, 81, 80 },
        { 83, 82 },
        {  0 },
        { 41, 83, 82 },
        { 46, 83, 82 },
        { 42, 83, 82 },
        {  2 },
        {  3 },
        {  4 },
        {  5 },
        {  6 },
        { 31, 73, 32 },
        { 39, 83 },
        { 40, 83 }
    };

    String[] PARSER_ERROR =
    {
        "",
        "Era esperado fim de programa",
        "Era esperado identificador",
        "Era esperado constanteInt",
        "Era esperado constanteFloat",
        "Era esperado constanteChar",
        "Era esperado constanteString",
        "Era esperado boolean",
        "Era esperado break",
        "Era esperado char",
        "Era esperado do",
        "Era esperado else",
        "Era esperado end",
        "Era esperado false",
        "Era esperado float",
        "Era esperado fun",
        "Era esperado if",
        "Era esperado int",
        "Era esperado main",
        "Era esperado print",
        "Era esperado println",
        "Era esperado readln",
        "Era esperado string",
        "Era esperado true",
        "Era esperado val",
        "Era esperado var",
        "Era esperado while",
        "Era esperado \":\"",
        "Era esperado \",\"",
        "Era esperado \";\"",
        "Era esperado \"=\"",
        "Era esperado \"(\"",
        "Era esperado \")\"",
        "Era esperado \"{\"",
        "Era esperado \"}\"",
        "Era esperado \"==\"",
        "Era esperado \"!=\"",
        "Era esperado \"<\"",
        "Era esperado \">\"",
        "Era esperado \"+\"",
        "Era esperado \"-\"",
        "Era esperado \"*\"",
        "Era esperado \"%\"",
        "Era esperado \"&&\"",
        "Era esperado \"||\"",
        "Era esperado \"!\"",
        "Era esperado \"/\"",
        "<programa> inválido",
        "<lista_instrucoes> inválido",
        "<lista_instrucoes1> inválido",
        "<instrucoes> inválido",
        "<constante> inválido",
        "<variavel> inválido",
        "<lista_identificadores> inválido",
        "<lista_identificadores1> inválido",
        "<tipo> inválido",
        "<valor> inválido",
        "<comando> inválido",
        "<atribuicao> inválido",
        "<entrada_dados> inválido",
        "<saida_dados> inválido",
        "<lista_expressoes> inválido",
        "<lista_expressoes1> inválido",
        "<selecao> inválido",
        "<cmd_else> inválido",
        "<lista_comandos> inválido",
        "<lista_comandos1> inválido",
        "<repeticao> inválido",
        "<v> inválido",
        "<v1> inválido",
        "<v2> inválido",
        "<vFinal> inválido",
        "<constante_string> inválido",
        "<expressao> inválido",
        "<expressao1> inválido",
        "<elemento> inválido",
        "<relacional> inválido",
        "<relacional1> inválido",
        "<operador_relacional> inválido",
        "<aritmetica> inválido",
        "<aritmetica1> inválido",
        "<termo> inválido",
        "<termo1> inválido",
        "<fator> inválido"
    };
}
